
import requests
import json
import os
from dotenv import load_dotenv


# Укажите ваш API ключ
api_key = os.environ.get("OPENAI_API_KEY")

# URL для запроса к API ChatGPT
url = 'https://api.openai.com/v1/chat/completions'

# Заголовки для запроса
headers = {
    'Authorization': f'Bearer {api_key}',
    'Content-Type': 'application/json'
}

# Данные для запроса

data = {
    'model': 'gpt-3.5-turbo',  # или другой доступный вам модель
    'messages': [ {'role': 'user', 'content': r"{0} {1}"}
    ]
}
# Отправка POST-запроса с использованием прокси
def send_request(desc, data):
    stroka = """
        Есть текст объявления о поиске арендателя, если информации не указано, если в квартире никто не проживает сейчас, то количество проживающих людей и их возраст заполнять не нужно пиши "не указано" этот формат необходимо преобразовать в json: {
{
"сколько людей проживает в квартире на данный момент" :???,		      
"параметры проживающих ":
	{
	1: ["???", "??? лет"] 
    }
  "количество комнат в квартире": "???" (число), 
  "пол разыскиваемого жильца": "???" (мужчина/женщина), 
  "количество разыскиваемых жильцов": "???"-"???" (число),
  "возраст разыскиваемого жильца ": "???" (нижний порог),
  "возможность проживания с детьми": "???" (да/нет/возможно),
  "возможность проживания с животными": "???" (да/нет/возможно),
  "изолированная ли комната": "???" (да или нет),
  "срок сдачи": "???" (до 6 месяцев, от 6 месяцев до 12, 12 месяцев и больше)
}
        Данный JSON не является корректным с точки зрения отступов, пожалуйста в своём ответе преврати его в адекватный json формат
        Вот сам текст объявления: """
    


    # Настройка прокси (замените на ваши данные)
    proxies = {
        'http': 'http://UefPe7:oebC72@196.18.166.178:8000',
        'https': 'http://UefPe7:oebC72@196.18.166.178:8000'
    }
        
    try:
        data['messages'][0]['content'] = data['messages'][0]['content'].format(stroka, desc)
    except:
        pass
    response = requests.post(url, headers=headers, data=json.dumps(data), proxies=proxies)

    # Проверка статуса ответа
    if response.status_code == 200:
        # Парсинг JSON-ответа
        response_data = response.json()
        print(response_data['choices'][0]['message']['content'])
        return(response_data['choices'][0]['message']['content'])
    else:
        print(f'Ошибка: {response.status_code}, {response.text}')
    
desc = """Без комиссии! Сдаётся уютная комната в просторной двухкомнатной квартире (64 м2) для девушки. Ищу соседку. Заехать можно 30.08 (+-)

    О квартире:
    * 6-8 минут пешком от метро Рассказовка.
    * 16 этаж нового современного дома.
    * Рядом крупный ТЦ «Сказка», где магазины, рестораны и фитнес клуб.
    * Безопасный, хорошо освещённый, благоустроенный район.
    * Близко парк для прогулок.
    * Отличный вид из окна.
    * Тихие соседи.
    * Хороший ремонт.
    * Есть вся необходимая техника и мебель.
    * Отдельная вместительная гардеробная.
    * Большая кухня с лоджией.
    * В доме пункты WB и Озон, пекарня, стоматология.
    * Светлая, тёплая, чистая квартира.
    * Порядочный адекватный собственник.

    Условия проживания:
    * Своевременная оплата: 28000 р. - аренда + вода и свет 1500 р. (Залог 28000 р. возвращается при выезде). Без комиссии.
    * Аккуратность и чистоплотность.
    * Без животных и детей.
    """

def chain_prompt(desc, data):
    a = send_request(desc, data)
    #b = json.loads(r"[{}]".format(a))


    #print(b)
            
    data['messages'].append({"role": "assistant", "content":"{}".format(a)})
    data['messages'].append({"role":"user", "content":"преобразуй, если о жильцах ничего неизвестно (даже пола), то вместо словаря сделай просто строку 'не указано' если в объявлении указан период (на сколько месяцев) сдачи то преобразуй его в формат 'число месяцев +', если сдается на срок больше чем месяцев, 'число месяцев -', если сдается на срок меньше, если срок сдачи не указан, то пиши не указано. и таким же образом преобразуй возраст БУДУЩЕГО арендатора, также если в объявлении указано что кто то ищет соседа, то это означает что в квартире кто то живет  "})
                            
    a = send_request(desc, data)

    b = json.loads(r"[{}]".format(a))
    print(b)
    return(b)

    
#chain_prompt(desc, data)